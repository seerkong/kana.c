

{let m
  {lambda (x y)
    #[
      [displayln "before add x y"]
      [+ x y]
    ]
  }
}
[m 1 3]


{lambda n (x y)
  #[
    [* x y]
  ]
}
[writeln "[n 2 3 ]: " [n 2 3] ]

{let a 2}
{lambda foo ()
  #[
    [writeln "current env a value: " a]
  ]
}

{lambda bar ()
  #[
    {let a 3}
    [writeln "var a value in lambda bar " a]
    [foo]
  ]
}

[bar]

`` nested lambda, should return 4
`` TODO add this line as a seperate test case
[writeln "[ {lambda (x) #[x] } 4 ] => "  [ {lambda (x) #[x] } 4] ]


{lambda make-method ()
  #[
    {let this 100}
    {let x 20}
    {lambda :capture=[this] ()
      #[
        [writeln "this value: " this]
        [writeln "x value: " x]
      ]
    }
  ]
}

{lambda build-class ()
  #[
    {let this 5}
    {let a [make-method] }
    [writeln a]

    `` x should be 20, this should be 5
    [writeln [a]]
  ]

}

[build-class]
