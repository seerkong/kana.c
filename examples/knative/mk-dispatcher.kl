
{set-dispatcher NumberDispacher
  #(
  :on-method-call
    {lambda (subj msg method-args)
      #[
        [writeln "on-method-call " msg]
        [writeln "method arg list " method-args]
        {cond
          [eq $+ msg]
          #[
            [writeln "composited + arg list " {kn/list/unshift % method-args subj} ]
            {apply $+ {kn/list/unshift % method-args subj} }
          ]
        }
      ]
    }
  :on-other-type
    {lambda (args)
      #[
        [displayln "on-other-type " args]
      ]
    }
  )
}

{set-dispatcher VectorDispacher
  #(
  :on-visit-vector
    {lambda (args)
      #[
        [displayln "on-visit-vector " args]
      ]
    }
  :on-visit-table
    {lambda (subj msg)
      #[
        [writeln "on-visit-table, subj: " subj " msg: " msg]
        [writeln {kn/table/at-idx % msg 0} ]
        {kn/vector/at-idx % subj {kn/table/at-idx % msg 0} }
      ]
    }
  )
}


``[writeln [get-dispatcher-id 5] ]

[writeln {5 + 2 3 4; + 6} ]

[writeln {#<"a" "b" "c"> #<2> } ]
[writeln {#<"a" "b" "c"> #(2) } ]
