{let a "abcdefgcd"}
{let regex-pattern '(ab.*?)d.*(fg)' }
{let matches {kn/regex/match %(regex-pattern a) } }

[writeln "test target: " a]
[writeln "regex-pattern: " regex-pattern]

{let vec {kn/vector} }
[writeln matches]
{for (
    {let i 0}
    [< i {vec/length % (matches) } ]
    {set i [+ i 1] }
  )
  #[
    {let match {vec/at-i % (matches i) } }
    [writeln match " start: " {vec/at-i % (match 0) } " end " {vec/at-i % (match 1) } ]
    [writeln {kn/str/sub-str % (a {vec/at-i % (match 0) } {vec/at-i % (match 1) } ) } ]
  ]
}
